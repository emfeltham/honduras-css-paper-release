// short captions
#let in-outline = state("in-outline", false)
#show outline: it => {
    in-outline.update(true)
    it
    in-outline.update(false)
}
#let flex-caption(long, short) = locate(loc => 
    if in-outline.at(loc) { short } else { long }
)

#import"@preview/tablex:0.0.8": tablex, gridx, hlinex, vlinex, colspanx, rowspanx, cellx
 
#let lbg = rgb("#63aaff")
#let org = rgb("#6d5319")
 
#figure(
    gridx(
        columns: (auto, auto, auto, auto, auto, auto, ),
        stroke: auto,
        cellx(colspan: 3)[],
        cellx(colspan: 3, align: center)[Difference],
        hlinex(start: 3, stroke: gray + 0.01em),
        cellx()[],
        vlinex(start: 2, stroke: 0.05em),
        cellx()[Variable],
        cellx()[Contrast],
        cellx()[TPR],
        cellx()[FPR],
        cellx()[J],
        hlinex(start: 1, stroke: 0.05em),
        hlinex(start: 1, stroke: 0.01em),
        cellx()[1],
        cellx()[Age (difference) \ #text(fill: lbg)[95% CI] \ #text(fill: lbg)[_P_]],
        cellx()[81.0 > 0.0],
        cellx()[0.203 \ (0.183, 0.223) \ 0.0],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        hlinex(start: 1, stroke: 0.01em),
        cellx()[2],
        cellx()[Age (mean)],
        cellx()[91.99 > 14.5],
        cellx()[-0.152 \ (-0.182, -0.121) \ 0.0],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        hlinex(start: 1, stroke: 0.01em),
        cellx()[3],
        cellx()[Cognizer-to-tie distance],
        cellx()[1.0 > No path],
        cellx()[0.084 \ (0.058, 0.11) \ 0.0],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        cellx()[4],
        cellx()[],
        cellx()[17.5 > 1.0],
        cellx()[-0.474 \ (-0.518, -0.43) \ 0.0],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        cellx()[5],
        cellx()[],
        cellx()[17.5 > No path],
        cellx()[-0.39 \ (-0.438, -0.342) \ 0.0],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        hlinex(start: 1, stroke: 0.01em),
        cellx()[6],
        cellx()[Degree (difference)],
        cellx()[17.0 > 0.0],
        cellx()[0.036 \ (0.002, 0.07) \ 0.0374],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        hlinex(start: 1, stroke: 0.01em),
        cellx()[7],
        cellx()[Degree (mean)],
        cellx()[15.99 > 1.0],
        cellx()[-0.164 \ (-0.211, -0.117) \ 0.0],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        hlinex(start: 1, stroke: 0.01em),
        cellx()[8],
        cellx()[Education],
        cellx()[Same > Mixed],
        cellx()[0.001 \ (-0.018, 0.02) \ 0.9171],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        hlinex(start: 1, stroke: 0.01em),
        cellx()[9],
        cellx()[Gender],
        cellx()[Mixed > Men],
        cellx()[0.046 \ (0.023, 0.069) \ 0.0001],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        cellx()[10],
        cellx()[],
        cellx()[Women > Men],
        cellx()[0.065 \ (0.044, 0.086) \ 0.0],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        cellx()[11],
        cellx()[],
        cellx()[Women > Mixed],
        cellx()[0.02 \ (-0.001, 0.04) \ 0.0574],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        hlinex(start: 1, stroke: 0.01em),
        cellx()[12],
        cellx()[Indigeneity],
        cellx()[Mestizo > Indigenous],
        cellx()[-0.008 \ (-0.036, 0.02) \ 0.5698],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        cellx()[13],
        cellx()[],
        cellx()[Mixed > Indigenous],
        cellx()[-0.013 \ (-0.044, 0.017) \ 0.3899],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        cellx()[14],
        cellx()[],
        cellx()[Mixed > Mestizo],
        cellx()[-0.005 \ (-0.027, 0.017) \ 0.6421],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        hlinex(start: 1, stroke: 0.01em),
        cellx()[15],
        cellx()[Relation],
        cellx()[Personal Private > Free Time],
        cellx()[-0.093 \ (-0.112, -0.073) \ 0.0],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        hlinex(start: 1, stroke: 0.01em),
        cellx()[16],
        cellx()[Religion],
        cellx()[Same > Mixed],
        cellx()[0.053 \ (0.032, 0.074) \ 0.0],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        hlinex(start: 1, stroke: 0.01em),
        cellx()[17],
        cellx()[Wealth (difference)],
        cellx()[1.0 > 0.0],
        cellx()[-0.382 \ (-0.422, -0.342) \ 0.0],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        hlinex(start: 1, stroke: 0.01em),
        cellx()[18],
        cellx()[Wealth (mean)],
        cellx()[1.0 > 0.1],
        cellx()[0.214 \ (0.185, 0.244) \ 0.0],
        cellx()[ \  \ ],
        cellx()[ \  \ ],
        vlinex(start: 2, stroke: 0.05em),
        hlinex(start: 1, stroke: 0.05em),
    ),
    caption: flex-caption(
[Contrasts for tie characteristics, intersection. Each accuracy measure represents the difference between the predicted value for each level of the contrast. 95% confidence intervals are presented in parentheses below the mean estimates. The corresponding p-values are presented below the intervals, and are rounded to 5 digits. FPR and J are not estimated.],
[Contrasts for tie characteristics, intersection.]
),
    kind: "table-si",
    supplement: [Supplementary Table],
) <contrast_tie_intersection_final>
