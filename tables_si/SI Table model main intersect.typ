#import"@preview/tablex:0.0.8": tablex, gridx, hlinex, vlinex, colspanx, rowspanx, cellx

// short captions
#let in-outline = state("in-outline", false)
#show outline: it => {
    in-outline.update(true)
    it
    in-outline.update(false)
}
#let flex-caption(long, short) = locate(loc => 
    if in-outline.at(loc) { short } else { long }
)

// table params
#let col1width = 10em
#let coliwidth = auto
#let name_align = left + horizon
// pkey 
#let ps = (super[$+$], super[$star.op$], super[$star.op star.op$], super[$star.op star.op star.op$], )
 
#figure(
    gridx(
        columns: (col1width, coliwidth, ),
        rows: (0.2em, 1.5em),
        align: center + horizon,
        stroke: auto,
        hlinex(y: 0, stroke: 0.05em),
        cellx(x: 0, y: 0, colspan: 2)[],
        hlinex(y: 1, stroke: 0.05em),
        cellx(x: 1, y: 1)[(TPR)],
        hlinex(start: 1, y: 2, stroke: 0.05em),
        cellx(x: 0, y: 36, align: name_align)[isindigenous_a: Mestizo],
        cellx(x: 1, y: 36)[-0.0099],
        cellx(x: 1, y: 37)[[-0.1578, 0.1379]],
        cellx(x: 0, y: 20, align: name_align)[religion_c: No Religion],
        cellx(x: 1, y: 20)[-0.1557],
        cellx(x: 1, y: 21)[[-0.4183, 0.107]],
        cellx(x: 0, y: 44, align: name_align)[degree_diff_a],
        cellx(x: 1, y: 44)[0.2051#ps.at(1)],
        cellx(x: 1, y: 45)[[0.0058, 0.4044]],
        cellx(x: 0, y: 46, align: name_align)[age_mean_a],
        cellx(x: 1, y: 46)[-2.057#ps.at(3)],
        cellx(x: 1, y: 47)[[-2.3097, -1.8043]],
        cellx(x: 0, y: 18, align: name_align)[educated: Yes],
        cellx(x: 1, y: 18)[-0.185#ps.at(2)],
        cellx(x: 1, y: 19)[[-0.3088, -0.0611]],
        cellx(x: 0, y: 70, align: name_align)[age & age_mean_a],
        cellx(x: 1, y: 70)[4.0659#ps.at(3)],
        cellx(x: 1, y: 71)[[3.3997, 4.7321]],
        cellx(x: 0, y: 52, align: name_align)[wealth_d1_4_diff_a],
        cellx(x: 1, y: 52)[-1.6907#ps.at(3)],
        cellx(x: 1, y: 53)[[-1.8559, -1.5255]],
        cellx(x: 0, y: 76, align: name_align)[dists_p_notinf & dists_p],
        cellx(x: 1, y: 76)[-2.2803#ps.at(3)],
        cellx(x: 1, y: 77)[[-2.5006, -2.0599]],
        cellx(x: 0, y: 22, align: name_align)[religion_c: Protestant],
        cellx(x: 1, y: 22)[0.0219],
        cellx(x: 1, y: 23)[[-0.0922, 0.136]],
        cellx(x: 0, y: 24, align: name_align)[wealth_d1_4],
        cellx(x: 1, y: 24)[-2.7937#ps.at(3)],
        cellx(x: 1, y: 25)[[-3.4261, -2.1614]],
        cellx(x: 0, y: 56, align: name_align)[man & man_a: Mixed],
        cellx(x: 1, y: 56)[-0.4352#ps.at(3)],
        cellx(x: 1, y: 57)[[-0.5705, -0.2998]],
        cellx(x: 0, y: 12, align: name_align)[age],
        cellx(x: 1, y: 12)[-0.0141],
        cellx(x: 1, y: 13)[[-0.6801, 0.6518]],
        cellx(x: 0, y: 60, align: name_align)[isindigenous_a: Mestizo & isindigenous],
        cellx(x: 1, y: 60)[-0.2306#ps.at(1)],
        cellx(x: 1, y: 61)[[-0.4496, -0.0115]],
        cellx(x: 0, y: 48, align: name_align)[age_diff_a],
        cellx(x: 1, y: 48)[1.3842#ps.at(3)],
        cellx(x: 1, y: 49)[[1.24, 1.5284]],
        cellx(x: 0, y: 58, align: name_align)[man & man_a: Women],
        cellx(x: 1, y: 58)[-0.2824#ps.at(3)],
        cellx(x: 1, y: 59)[[-0.3994, -0.1655]],
        cellx(x: 0, y: 32, align: name_align)[man_a: Mixed],
        cellx(x: 1, y: 32)[0.39#ps.at(3)],
        cellx(x: 1, y: 33)[[0.3034, 0.4765]],
        cellx(x: 0, y: 14, align: name_align)[age ^ 2],
        cellx(x: 1, y: 14)[-1.9505#ps.at(3)],
        cellx(x: 1, y: 15)[[-2.7342, -1.1667]],
        cellx(x: 0, y: 64, align: name_align)[religion_c: No Religion & religion_c_a: Same],
        cellx(x: 1, y: 64)[0.0402],
        cellx(x: 1, y: 65)[[-0.2208, 0.3012]],
        cellx(x: 0, y: 40, align: name_align)[religion_c_a: Same],
        cellx(x: 1, y: 40)[0.2731#ps.at(3)],
        cellx(x: 1, y: 41)[[0.1951, 0.3512]],
        cellx(x: 0, y: 74, align: name_align)[kin431 & relation: personal_private],
        cellx(x: 1, y: 74)[0.3001#ps.at(3)],
        cellx(x: 1, y: 75)[[0.2069, 0.3933]],
        cellx(x: 0, y: 28, align: name_align)[isindigenous],
        cellx(x: 1, y: 28)[0.2742#ps.at(1)],
        cellx(x: 1, y: 29)[[0.0798, 0.4686]],
        cellx(x: 0, y: 42, align: name_align)[degree_mean_a],
        cellx(x: 1, y: 42)[-1.4234#ps.at(3)],
        cellx(x: 1, y: 43)[[-1.7863, -1.0605]],
        cellx(x: 0, y: 2, align: name_align)[(Intercept)],
        cellx(x: 1, y: 2)[1.9729#ps.at(3)],
        cellx(x: 1, y: 3)[[1.5423, 2.4034]],
        cellx(x: 0, y: 34, align: name_align)[man_a: Women],
        cellx(x: 1, y: 34)[0.4457#ps.at(3)],
        cellx(x: 1, y: 35)[[0.3743, 0.5172]],
        cellx(x: 0, y: 38, align: name_align)[isindigenous_a: Mixed],
        cellx(x: 1, y: 38)[-0.0743],
        cellx(x: 1, y: 39)[[-0.2265, 0.0779]],
        cellx(x: 0, y: 66, align: name_align)[religion_c: Protestant & religion_c_a: Same],
        cellx(x: 1, y: 66)[0.0055],
        cellx(x: 1, y: 67)[[-0.1053, 0.1163]],
        cellx(x: 0, y: 10, align: name_align)[man],
        cellx(x: 1, y: 10)[0.2507#ps.at(3)],
        cellx(x: 1, y: 11)[[0.1386, 0.3628]],
        cellx(x: 0, y: 16, align: name_align)[educated: Some],
        cellx(x: 1, y: 16)[-0.1112#ps.at(1)],
        cellx(x: 1, y: 17)[[-0.2104, -0.012]],
        cellx(x: 0, y: 6, align: name_align)[relation: personal_private],
        cellx(x: 1, y: 6)[-0.5119#ps.at(3)],
        cellx(x: 1, y: 7)[[-0.5654, -0.4584]],
        cellx(x: 0, y: 26, align: name_align)[coffee_cultivation],
        cellx(x: 1, y: 26)[0.2241#ps.at(3)],
        cellx(x: 1, y: 27)[[0.0934, 0.3548]],
        cellx(x: 0, y: 30, align: name_align)[educated_a: Same],
        cellx(x: 1, y: 30)[0.0056],
        cellx(x: 1, y: 31)[[-0.0402, 0.0515]],
        cellx(x: 0, y: 4, align: name_align)[kin431],
        cellx(x: 1, y: 4)[2.3736#ps.at(3)],
        cellx(x: 1, y: 5)[[2.2967, 2.4505]],
        cellx(x: 0, y: 50, align: name_align)[wealth_d1_4_mean_a],
        cellx(x: 1, y: 50)[-0.9991#ps.at(2)],
        cellx(x: 1, y: 51)[[-1.6104, -0.3878]],
        cellx(x: 0, y: 62, align: name_align)[isindigenous_a: Mixed & isindigenous],
        cellx(x: 1, y: 62)[0.0025],
        cellx(x: 1, y: 63)[[-0.209, 0.214]],
        cellx(x: 0, y: 8, align: name_align)[degree],
        cellx(x: 1, y: 8)[-0.3303],
        cellx(x: 1, y: 9)[[-0.7971, 0.1364]],
        cellx(x: 0, y: 54, align: name_align)[dists_p_notinf],
        cellx(x: 1, y: 54)[0.6185#ps.at(3)],
        cellx(x: 1, y: 55)[[0.5037, 0.7332]],
        cellx(x: 0, y: 68, align: name_align)[degree & degree_mean_a],
        cellx(x: 1, y: 68)[3.4457#ps.at(3)],
        cellx(x: 1, y: 69)[[1.7288, 5.1626]],
        cellx(x: 0, y: 72, align: name_align)[wealth_d1_4 & wealth_d1_4_mean_a],
        cellx(x: 1, y: 72)[4.2444#ps.at(3)],
        cellx(x: 1, y: 73)[[3.2087, 5.28]],
        hlinex(start: 1, y: 78, stroke: 0.05em),
        cellx(x: 0, y: 78, align: name_align)[perceiver var.],
        cellx(x: 0, y: 79, align: name_align)[village_code var.],
        cellx(x: 0, y: 80, align: name_align)[N#sub[groups]],
        cellx(x: 1, y: 78)[1.2997],
        cellx(x: 1, y: 79)[0.1916],
        cellx(x: 1, y: 80)[9963, 82],
        hlinex(start: 1, y: 81, stroke: 0.05em),
        cellx(x: 0, y: 81, align: name_align)[N],
        cellx(x: 0, y: 83, align: name_align)[BIC],
        cellx(x: 0, y: 82, align: name_align)[AIC],
        cellx(x: 1, y: 81)[105162],
        cellx(x: 1, y: 83)[66696.7609],
        cellx(x: 1, y: 82)[66314.2306],
        hlinex(y: 84, stroke: 0.1em),
        cellx(y: 84, colspan: 2, align: left)[Note: #ps.at(0)$p<0.1$; #ps.at(1)$p<0.05$; #ps.at(2)$p<0.005$; #ps.at(3)$p<0.001$],
    ),
    caption: flex-caption(
        [Social network response model, for the intersection-based tie robustness check. The TPR model is restricted to include only nominations made at both waves 3 and 4. Ties are further allowed to be considered true if at least one of the two nodes exists only at wave 4. Models of the individual cognizer responses on the determinants of accuracy with respondent, tie, and village characteristics.],
        [Social network response model, intersection-based tie]
    ),
    kind: table,
) <model_intersect>
